## DO NOT EDIT! GENERATED AUTOMATICALLY!
## Process this file with automake to produce Makefile.in.
# Copyright (C) 2002-2023 Free Software Foundation, Inc.
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this file.  If not, see <https://www.gnu.org/licenses/>.
#
# As a special exception to the GNU General Public License,
# this file may be distributed as part of a program that
# contains a configuration script generated by Autoconf, under
# the same distribution terms as the rest of that program.
#
# Generated by gnulib-tool.
# Reproduce by:
# gnulib-tool --import \
#  --lib=libgnu \
#  --source-base=lib \
#  --m4-base=m4 \
#  --doc-base=. \
#  --tests-base=test \
#  --aux-dir=build-aux \
#  --no-conditional-dependencies \
#  --no-libtool \
#  --macro-prefix=gl \
#  --no-vc-files \
#  configmake \
#  manywarnings \
#  version-etc

AUTOMAKE_OPTIONS = 1.14 gnits

SUBDIRS =
noinst_HEADERS =
noinst_LIBRARIES =
noinst_LTLIBRARIES =
EXTRA_DIST =
BUILT_SOURCES =
SUFFIXES =
MOSTLYCLEANFILES = core *.stackdump
MOSTLYCLEANDIRS =
CLEANFILES =
DISTCLEANFILES =
MAINTAINERCLEANFILES =
# No GNU Make output.

AM_CPPFLAGS =
AM_CFLAGS =

noinst_LIBRARIES += libgnu.a

libgnu_a_SOURCES =
libgnu_a_CFLAGS = $(AM_CFLAGS) $(GL_CFLAG_GNULIB_WARNINGS)
libgnu_a_LIBADD = $(gl_LIBOBJS)
libgnu_a_DEPENDENCIES = $(gl_LIBOBJS)
EXTRA_libgnu_a_SOURCES =

## begin gnulib module absolute-header

# Use this preprocessor expression to decide whether #include_next works.
# Do not rely on a 'configure'-time test for this, since the expression
# might appear in an installed header, which is used by some other compiler.
HAVE_INCLUDE_NEXT = (__GNUC__ || __clang__ || 60000000 <= __DECC_VER)

## end   gnulib module absolute-header

## begin gnulib module configmake

# Listed in the same order as the GNU makefile conventions, and
# provided by autoconf 2.59c+ or 2.70.
# The Automake-defined pkg* macros are appended, in the order
# listed in the Automake 1.10a+ documentation.
configmake.h: Makefile
	$(gl_V_at){ echo '/* DO NOT EDIT! GENERATED AUTOMATICALLY! */'; \
	  echo '#if HAVE_WINSOCK2_H'; \
	  echo '# include <winsock2.h> /* avoid mingw pollution on DATADIR */'; \
	  echo '#endif'; \
	  printf '#define PREFIX %s\n' $(prefix_c_make); \
	  printf '#define EXEC_PREFIX %s\n' $(exec_prefix_c_make); \
	  printf '#define BINDIR %s\n' $(bindir_c_make); \
	  printf '#define SBINDIR %s\n' $(sbindir_c_make); \
	  printf '#define LIBEXECDIR %s\n' $(libexecdir_c_make); \
	  printf '#define DATAROOTDIR %s\n' $(datarootdir_c_make); \
	  printf '#define DATADIR %s\n' $(datadir_c_make); \
	  printf '#define SYSCONFDIR %s\n' $(sysconfdir_c_make); \
	  printf '#define SHAREDSTATEDIR %s\n' $(sharedstatedir_c_make); \
	  printf '#define LOCALSTATEDIR %s\n' $(localstatedir_c_make); \
	  printf '#define RUNSTATEDIR %s\n' $(runstatedir_c_make); \
	  printf '#define INCLUDEDIR %s\n' $(includedir_c_make); \
	  printf '#define OLDINCLUDEDIR %s\n' $(oldincludedir_c_make); \
	  printf '#define DOCDIR %s\n' $(docdir_c_make); \
	  printf '#define INFODIR %s\n' $(infodir_c_make); \
	  printf '#define HTMLDIR %s\n' $(htmldir_c_make); \
	  printf '#define DVIDIR %s\n' $(dvidir_c_make); \
	  printf '#define PDFDIR %s\n' $(pdfdir_c_make); \
	  printf '#define PSDIR %s\n' $(psdir_c_make); \
	  printf '#define LIBDIR %s\n' $(libdir_c_make); \
	  printf '#define LISPDIR %s\n' $(lispdir_c_make); \
	  printf '#define LOCALEDIR %s\n' $(localedir_c_make); \
	  printf '#define MANDIR %s\n' $(mandir_c_make); \
	  printf '#define MANEXT %s\n' \"$(manext)\"; \
	  printf '#define PKGDATADIR %s\n' $(pkgdatadir_c_make); \
	  printf '#define PKGINCLUDEDIR %s\n' $(pkgincludedir_c_make); \
	  printf '#define PKGLIBDIR %s\n' $(pkglibdir_c_make); \
	  printf '#define PKGLIBEXECDIR %s\n' $(pkglibexecdir_c_make); \
	} | sed '/""/d' > $@-t
	$(AM_V_at)mv $@-t $@

BUILT_SOURCES += configmake.h
CLEANFILES += configmake.h configmake.h-t

## end   gnulib module configmake

## begin gnulib module gen-header

# In 'sed', replace the pattern space with a "DO NOT EDIT" comment.
SED_HEADER_NOEDIT = s,.*,/* DO NOT EDIT! GENERATED AUTOMATICALLY! */,

# '$(SED_HEADER_STDOUT) -e "..."' runs 'sed' but first outputs "DO NOT EDIT".
SED_HEADER_STDOUT = sed -e 1h -e '1$(SED_HEADER_NOEDIT)' -e 1G

# '$(SED_HEADER_TO_AT_t) FILE' copies FILE to $@-t, prepending a leading
# "DO_NOT_EDIT".  Although this could be done more simply via:
#	SED_HEADER_TO_AT_t = $(SED_HEADER_STDOUT) > $@-t
# the -n and 'w' avoid a fork+exec, at least when GNU Make is used.
SED_HEADER_TO_AT_t = $(SED_HEADER_STDOUT) -n -e 'w $@-t'

# Use $(gl_V_at) instead of $(AM_V_GEN) or $(AM_V_at) on a line that
gl_V_at = $(AM_V_GEN)

## end   gnulib module gen-header

## begin gnulib module gettext-h

libgnu_a_SOURCES += gettext.h

## end   gnulib module gettext-h

## begin gnulib module stdarg

BUILT_SOURCES += $(STDARG_H)

# We need the following in order to create <stdarg.h> when the system
# doesn't have one that works with the given compiler.
if GL_GENERATE_STDARG_H
stdarg.h: stdarg.in.h $(top_builddir)/config.status
	$(gl_V_at)$(SED_HEADER_STDOUT) \
	      -e 's|@''GUARD_PREFIX''@|GL|g' \
	      -e 's|@''INCLUDE_NEXT''@|$(INCLUDE_NEXT)|g' \
	      -e 's|@''PRAGMA_SYSTEM_HEADER''@|@PRAGMA_SYSTEM_HEADER@|g' \
	      -e 's|@''PRAGMA_COLUMNS''@|@PRAGMA_COLUMNS@|g' \
	      -e 's|@''NEXT_STDARG_H''@|$(NEXT_STDARG_H)|g' \
	      $(srcdir)/stdarg.in.h > $@-t
	$(AM_V_at)mv $@-t $@
else
stdarg.h: $(top_builddir)/config.status
	rm -f $@
endif
MOSTLYCLEANFILES += stdarg.h stdarg.h-t

EXTRA_DIST += stdarg.in.h

## end   gnulib module stdarg

## begin gnulib module version-etc

libgnu_a_SOURCES += version-etc.h version-etc.c

## end   gnulib module version-etc


mostlyclean-local: mostlyclean-generic
	@for dir in '' $(MOSTLYCLEANDIRS); do \
	  if test -n "$$dir" && test -d $$dir; then \
	    echo "rmdir $$dir"; rmdir $$dir; \
	  fi; \
	done; \
	:
distclean-local: distclean-gnulib-libobjs
distclean-gnulib-libobjs:
	-rm -f @gl_LIBOBJDEPS@
maintainer-clean-local: distclean-gnulib-libobjs
